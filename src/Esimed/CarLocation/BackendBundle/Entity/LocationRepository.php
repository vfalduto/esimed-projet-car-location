<?php

namespace Esimed\CarLocation\BackendBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends EntityRepository
{
    /**
     * @param $agence
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function loadAllUnArchive() {
        return $this->createQueryBuilder('v')
            ->where('v.etat not in (:etat)')
            ->orderBy('v.created', 'DESC')
            ->setParameter('etat', Location::$ETAT_ARCHIVE)
            ->getQuery()->getResult()
            ;
    }

    /**
     * renvoie les locations en cours pour le client
     * @param Client $client
     * @return array
     */
    public function loadEnCours(Client $client) {
        $current = new \DateTime();

        return $this->createQueryBuilder('v')
            ->where('v.client in (:client)')
            ->andWhere('v.dateDepart <= :c1 and v.dateArrivee >= :c2')
            ->orderBy('v.created', 'DESC')
            ->setParameter('client', $client)
            ->setParameter('c1', $current)
            ->setParameter('c2', $current)
            ->getQuery()->getResult()
            ;
    }

    /**
     * renvoie les locations futur du client
     * @param Client $client
     * @return array
     */
    public function loadFutur(Client $client) {
        $current = new \DateTime();

        return $this->createQueryBuilder('v')
            ->where('v.client in (:client)')
            ->andWhere('v.dateDepart > :current ')
            ->orderBy('v.created', 'DESC')
            ->setParameter('client', $client)
            ->setParameter('current', $current)
            ->getQuery()->getResult()
            ;
    }

    /**
     * renvoie les location te
     * @param Client $client
     * @return array
     */
    public function loadTermine(Client $client) {
        $current = new \DateTime();

        return $this->createQueryBuilder('v')
            ->where('v.client in (:client)')
            ->andWhere('v.dateArrivee <= :current ')
            ->orderBy('v.created', 'DESC')
            ->setParameter('client', $client)
            ->setParameter('current', $current)
            ->getQuery()->getResult()
            ;
    }
}